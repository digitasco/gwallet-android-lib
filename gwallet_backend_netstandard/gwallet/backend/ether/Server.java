/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package gwallet_backend_netstandard.gwallet.backend.ether;

import mono.embeddinator.*;
import com.sun.jna.*;

public final class Server {
    public static java.lang.String broadcastTransaction(gwallet_backend_netstandard.gwallet.backend.Currency currency, java.lang.String transaction) {
        java.lang.String __ret = gwallet_backend_netstandard.Native_GWallet_Backend_NetStandard.INSTANCE.GWallet_Backend_Ether_Server_BroadcastTransaction(currency == null ? null : currency.__object, transaction);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    static java.lang.String getPUBLIC_WEB3_API_ETH_INFURA_MEW() {
        java.lang.String __ret = gwallet_backend_netstandard.Native_GWallet_Backend_NetStandard.INSTANCE.GWallet_Backend_Ether_Server_get_PUBLIC_WEB3_API_ETH_INFURA_MEW();
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    static java.lang.String getPUBLIC_WEB3_API_ETH_MEW() {
        java.lang.String __ret = gwallet_backend_netstandard.Native_GWallet_Backend_NetStandard.INSTANCE.GWallet_Backend_Ether_Server_get_PUBLIC_WEB3_API_ETH_MEW();
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    static java.lang.String getPUBLIC_WEB3_API_ETC() {
        java.lang.String __ret = gwallet_backend_netstandard.Native_GWallet_Backend_NetStandard.INSTANCE.GWallet_Backend_Ether_Server_get_PUBLIC_WEB3_API_ETC();
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public static java.lang.String getexMsg() {
        java.lang.String __ret = gwallet_backend_netstandard.Native_GWallet_Backend_NetStandard.INSTANCE.GWallet_Backend_Ether_Server_get_exMsg();
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    static int getNUMBER_OF_CONSISTENT_RESPONSES_TO_TRUST_ETH_SERVER_RESULTS() {
        int __ret = gwallet_backend_netstandard.Native_GWallet_Backend_NetStandard.INSTANCE.GWallet_Backend_Ether_Server_get_NUMBER_OF_CONSISTENT_RESPONSES_TO_TRUST_ETH_SERVER_RESULTS();
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }
}
