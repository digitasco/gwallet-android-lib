/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package gwallet_backend_netstandard.gwallet.backend.bitcoin;

import mono.embeddinator.*;
import com.sun.jna.*;

public class MinerFee {
    public com.sun.jna.Pointer __object;

    public MinerFee(com.sun.jna.Pointer object) { this.__object = object; }

    public java.math.BigDecimal calculateAbsoluteValue() {
        mono.embeddinator.Decimal __ret = gwallet_backend_netstandard.Native_GWallet_Backend_NetStandard.INSTANCE.GWallet_Backend_Bitcoin_MinerFee_CalculateAbsoluteValue(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret.getValue();
    }

    public int getEstimatedTransactionSizeInBytes() {
        int __ret = gwallet_backend_netstandard.Native_GWallet_Backend_NetStandard.INSTANCE.GWallet_Backend_Bitcoin_MinerFee_get_EstimatedTransactionSizeInBytes(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public java.math.BigDecimal getAmountPerKiloByteForFastTransaction() {
        mono.embeddinator.Decimal __ret = gwallet_backend_netstandard.Native_GWallet_Backend_NetStandard.INSTANCE.GWallet_Backend_Bitcoin_MinerFee_get_AmountPerKiloByteForFastTransaction(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret.getValue();
    }
}
